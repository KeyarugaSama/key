# Encoded By Py-Fuscate
# https://github.com/Sl-Sanda-Ru/Py-Fuscate
# Make Sure You're Running The Program With python3.11 Otherwise It May Crash
# To Check Your Python Version Run "python -V" Command
try:
	import marshal,lzma,gzip,bz2,binascii,zlib;exec(marshal.loads(binascii.a2b_base64(b'\n')))
except KeyboardInterrupt:
	exit()